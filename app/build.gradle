plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

// Load API key directly
def getApiKey() {
    Properties properties = new Properties()
    
    // Try to load from local.properties first (gitignored)
    def localPropertiesFile = rootProject.file("local.properties")
    if (localPropertiesFile.exists()) {
        properties.load(new FileInputStream(localPropertiesFile))
        if (properties['YOUTUBE_API_KEY']) {
            def key = properties['YOUTUBE_API_KEY']
            // Ensure the key is properly quoted for BuildConfig
            return key.startsWith('"') ? key : "\"${key}\""
        }
    }
    
    // Use a placeholder key as fallback - this won't work in production
    return "\"AIzaSyBwAUnSL0aXvYRDJplZ3-aEVu8uvKh80EE\""
}

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.example.telepartyproject"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Inject API keys as BuildConfig fields
        buildConfigField "String", "YOUTUBE_API_KEY", getApiKey()
        buildConfigField "String", "YOUTUBE_API_BASE_URL", '"https://www.googleapis.com/youtube/v3/"'
        buildConfigField "boolean", "ENABLE_STRICT_MODE", "true"
    }
    
    // Single build type configuration
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    
    // Lint configuration
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    kotlinOptions {
        jvmTarget = '1.8'
    }
    
    buildFeatures {
        compose true
    }
    
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }

    // Testing configuration
    testOptions {
        // For Compose UI testing
        unitTests {
            includeAndroidResources = true
            
            // Enable unit tests
            all {
                enabled = true
                
                // Enable Byte Buddy for Java 22
                jvmArgs += ["-Dnet.bytebuddy.experimental=true"]
            }
        }
        
        // Disable animation in instrumentation tests
        animationsDisabled true
    }

    // For handling legacy Fragment testing
    packagingOptions {
        resources {
            excludes += ['/META-INF/AL2.0', '/META-INF/LGPL2.1']
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    
    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    
    // Jetpack Compose
    def compose_version = "1.3.3"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:1.3.1"
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    
    // Compose Navigation
    implementation 'androidx.navigation:navigation-compose:2.5.3'
    
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    
    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    
    // JSON parsing
    implementation 'org.json:json:20230227'
    
    // Media3 dependencies (replacement for ExoPlayer)
    def media3_version = "1.1.1"
    implementation "androidx.media3:media3-exoplayer:$media3_version"
    implementation "androidx.media3:media3-ui:$media3_version"
    implementation "androidx.media3:media3-exoplayer-dash:$media3_version"
    
    // Security-related dependencies
    implementation "androidx.security:security-crypto:1.1.0-alpha06"  // For EncryptedSharedPreferences
    implementation "com.google.android.play:integrity:1.1.0"  // Play Integrity API
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4"  // For tasks.await()
    
    // Testing - Unit Tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.mockito:mockito-core:5.0.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:4.1.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    
    // Testing - Instrumentation Tests
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestUtil 'androidx.test:orchestrator:1.4.2'
    
    // Espresso dependencies for UI testing
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.1'
    
    // Fragment testing
    androidTestImplementation "androidx.fragment:fragment-testing:1.5.5"
    
    // Mockito for Android tests
    androidTestImplementation 'org.mockito:mockito-android:5.0.0'
    androidTestImplementation 'org.mockito.kotlin:mockito-kotlin:4.1.0'
    
    // Compose Testing
    androidTestImplementation "androidx.compose.ui:ui-test:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
} 